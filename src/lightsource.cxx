// Copyright (C) 2022  Fernando García Liñán
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#include "lightsource.hxx"

#include "lut.hxx"

using namespace glm;

namespace {

static const LookupTable sun_spectral_irradiance_lut = {
    {199.5, 0.005},
    {200.5, 0.007},
    {201.5, 0.007},
    {202.5, 0.008},
    {203.5, 0.009},
    {204.5, 0.009},
    {205.5, 0.010},
    {206.5, 0.010},
    {207.5, 0.011},
    {208.5, 0.015},
    {209.5, 0.024},
    {210.5, 0.028},
    {211.5, 0.034},
    {212.5, 0.030},
    {213.5, 0.032},
    {214.5, 0.041},
    {215.5, 0.037},
    {216.5, 0.034},
    {217.5, 0.036},
    {218.5, 0.045},
    {219.5, 0.048},
    {220.5, 0.048},
    {221.5, 0.039},
    {222.5, 0.051},
    {223.5, 0.066},
    {224.5, 0.058},
    {225.5, 0.054},
    {226.5, 0.041},
    {227.5, 0.041},
    {228.5, 0.054},
    {229.5, 0.048},
    {230.5, 0.056},
    {231.5, 0.050},
    {232.5, 0.055},
    {233.5, 0.046},
    {234.5, 0.039},
    {235.5, 0.057},
    {236.5, 0.049},
    {237.5, 0.053},
    {238.5, 0.042},
    {239.5, 0.046},
    {240.5, 0.043},
    {241.5, 0.052},
    {242.5, 0.072},
    {243.5, 0.065},
    {244.5, 0.062},
    {245.5, 0.051},
    {246.5, 0.051},
    {247.5, 0.057},
    {248.5, 0.045},
    {249.5, 0.058},
    {250.5, 0.059},
    {251.5, 0.047},
    {252.5, 0.044},
    {253.5, 0.055},
    {254.5, 0.061},
    {255.5, 0.089},
    {256.5, 0.107},
    {257.5, 0.129},
    {258.5, 0.134},
    {259.5, 0.108},
    {260.5, 0.102},
    {261.5, 0.103},
    {262.5, 0.121},
    {263.5, 0.175},
    {264.5, 0.274},
    {265.5, 0.280},
    {266.5, 0.260},
    {267.5, 0.270},
    {268.5, 0.260},
    {269.5, 0.252},
    {270.5, 0.293},
    {271.5, 0.232},
    {272.5, 0.215},
    {273.5, 0.204},
    {274.5, 0.137},
    {275.5, 0.200},
    {276.5, 0.258},
    {277.5, 0.240},
    {278.5, 0.166},
    {279.5, 0.089},
    {280.5, 0.112},
    {281.5, 0.231},
    {282.5, 0.307},
    {283.5, 0.330},
    {284.5, 0.244},
    {285.5, 0.141},
    {286.5, 0.320},
    {287.5, 0.371},
    {288.5, 0.307},
    {289.5, 0.456},
    {290.5, 0.623},
    {291.5, 0.600},
    {292.5, 0.545},
    {293.5, 0.545},
    {294.5, 0.509},
    {295.5, 0.548},
    {296.5, 0.492},
    {297.5, 0.531},
    {298.5, 0.413},
    {299.5, 0.485},
    {300.5, 0.403},
    {301.5, 0.445},
    {302.5, 0.484},
    {303.5, 0.631},
    {304.5, 0.610},
    {305.5, 0.580},
    {306.5, 0.575},
    {307.5, 0.645},
    {308.5, 0.613},
    {309.5, 0.484},
    {310.0, 0.495},
    {310.4, 0.507},
    {310.8, 0.588},
    {311.2, 0.707},
    {311.6, 0.747},
    {312.0, 0.707},
    {312.4, 0.644},
    {312.8, 0.663},
    {313.2, 0.710},
    {313.6, 0.691},
    {314.0, 0.689},
    {314.4, 0.722},
    {314.8, 0.673},
    {315.2, 0.695},
    {315.6, 0.765},
    {316.0, 0.675},
    {316.4, 0.569},
    {316.8, 0.623},
    {317.2, 0.749},
    {317.6, 0.830},
    {318.0, 0.813},
    {318.4, 0.673},
    {318.8, 0.642},
    {319.2, 0.768},
    {319.6, 0.759},
    {320.0, 0.712},
    {320.4, 0.778},
    {320.8, 0.844},
    {321.2, 0.847},
    {321.6, 0.736},
    {322.0, 0.695},
    {322.4, 0.773},
    {322.8, 0.758},
    {323.2, 0.646},
    {323.6, 0.603},
    {324.0, 0.604},
    {324.4, 0.618},
    {324.8, 0.654},
    {325.2, 0.646},
    {325.6, 0.682},
    {326.0, 0.852},
    {326.4, 1.049},
    {326.8, 1.111},
    {327.2, 1.108},
    {327.6, 1.050},
    {328.0, 0.965},
    {328.4, 0.914},
    {328.8, 0.913},
    {329.2, 0.952},
    {329.6, 1.043},
    {330.0, 1.144},
    {330.4, 1.137},
    {330.5, 1.006},
    {331.5, 0.968},
    {332.5, 0.921},
    {333.5, 0.905},
    {334.5, 0.940},
    {335.5, 0.982},
    {336.5, 0.765},
    {337.5, 0.866},
    {338.5, 0.916},
    {339.5, 0.937},
    {340.5, 0.992},
    {341.5, 0.936},
    {342.5, 0.995},
    {343.5, 0.985},
    {344.5, 0.719},
    {345.5, 0.967},
    {346.5, 0.919},
    {347.5, 0.902},
    {348.5, 0.948},
    {349.5, 0.865},
    {350.5, 1.119},
    {351.5, 0.993},
    {352.5, 0.871},
    {353.5, 1.115},
    {354.5, 1.133},
    {355.5, 1.058},
    {356.5, 0.938},
    {357.5, 0.891},
    {358.5, 0.627},
    {359.5, 1.136},
    {360.5, 0.979},
    {361.5, 0.894},
    {362.5, 1.175},
    {363.5, 0.958},
    {364.5, 1.015},
    {365.5, 1.263},
    {366.5, 1.249},
    {367.5, 1.214},
    {368.5, 1.088},
    {369.5, 1.331},
    {370.5, 1.075},
    {371.5, 1.307},
    {372.5, 1.065},
    {373.5, 0.838},
    {374.5, 0.878},
    {375.5, 1.141},
    {376.5, 1.101},
    {377.5, 1.291},
    {378.5, 1.341},
    {379.5, 1.000},
    {380.5, 1.289},
    {381.5, 1.096},
    {382.5, 0.733},
    {383.5, 0.684},
    {384.5, 1.027},
    {385.5, 0.954},
    {386.5, 1.071},
    {387.5, 0.966},
    {388.5, 0.912},
    {389.5, 1.227},
    {390.5, 1.223},
    {391.5, 1.398},
    {392.5, 0.955},
    {393.5, 0.489},
    {394.5, 1.101},
    {395.5, 1.378},
    {396.5, 0.650},
    {397.5, 1.040},
    {398.5, 1.538},
    {399.5, 1.655},
    {400.5, 1.649},
    {401.5, 1.796},
    {402.5, 1.803},
    {403.5, 1.658},
    {404.5, 1.602},
    {405.5, 1.672},
    {406.5, 1.624},
    {407.5, 1.545},
    {408.5, 1.824},
    {409.5, 1.706},
    {410.5, 1.502},
    {411.5, 1.819},
    {412.5, 1.791},
    {413.5, 1.758},
    {414.5, 1.739},
    {415.5, 1.736},
    {416.5, 1.844},
    {417.5, 1.667},
    {418.5, 1.686},
    {419.5, 1.703},
    {420.5, 1.760},
    {421.5, 1.799},
    {422.5, 1.584},
    {423.5, 1.713},
    {424.5, 1.770},
    {425.5, 1.697},
    {426.5, 1.700},
    {427.5, 1.571},
    {428.5, 1.589},
    {429.5, 1.477},
    {430.5, 1.136},
    {431.5, 1.688},
    {432.5, 1.648},
    {433.5, 1.733},
    {434.5, 1.672},
    {435.5, 1.725},
    {436.5, 1.931},
    {437.5, 1.808},
    {438.5, 1.569},
    {439.5, 1.827},
    {440.5, 1.715},
    {441.5, 1.933},
    {442.5, 1.982},
    {443.5, 1.911},
    {444.5, 1.975},
    {445.5, 1.823},
    {446.5, 1.893},
    {447.5, 2.079},
    {448.5, 1.975},
    {449.5, 2.029},
    {450.5, 2.146},
    {451.5, 2.111},
    {452.5, 1.943},
    {453.5, 1.972},
    {454.5, 1.981},
    {455.5, 2.036},
    {456.5, 2.079},
    {457.5, 2.102},
    {458.5, 1.973},
    {459.5, 2.011},
    {460.5, 2.042},
    {461.5, 2.057},
    {462.5, 2.106},
    {463.5, 2.042},
    {464.5, 1.978},
    {465.5, 2.044},
    {466.5, 1.923},
    {467.5, 2.017},
    {468.5, 1.996},
    {469.5, 1.992},
    {470.5, 1.879},
    {471.5, 2.020},
    {472.5, 2.043},
    {473.5, 1.993},
    {474.5, 2.053},
    {475.5, 2.018},
    {476.5, 1.958},
    {477.5, 2.077},
    {478.5, 2.011},
    {479.5, 2.078},
    {480.5, 2.037},
    {481.5, 2.092},
    {482.5, 2.025},
    {483.5, 2.021},
    {484.5, 1.971},
    {485.5, 1.832},
    {486.5, 1.627},
    {487.5, 1.832},
    {488.5, 1.916},
    {489.5, 1.962},
    {490.5, 2.009},
    {491.5, 1.898},
    {492.5, 1.898},
    {493.5, 1.890},
    {494.5, 2.060},
    {495.5, 1.928},
    {496.5, 2.019},
    {497.5, 2.020},
    {498.5, 1.868},
    {499.5, 1.972},
    {500.5, 1.859},
    {501.5, 1.814},
    {502.5, 1.896},
    {503.5, 1.936},
    {504.5, 1.871},
    {505.5, 1.995},
    {506.5, 1.963},
    {507.5, 1.908},
    {508.5, 1.921},
    {509.5, 1.918},
    {510.5, 1.949},
    {511.5, 1.999},
    {512.5, 1.869},
    {513.5, 1.863},
    {514.5, 1.876},
    {515.5, 1.902},
    {516.5, 1.671},
    {517.5, 1.728},
    {518.5, 1.656},
    {519.5, 1.830},
    {520.5, 1.833},
    {521.5, 1.908},
    {522.5, 1.825},
    {523.5, 1.896},
    {524.5, 1.960},
    {525.5, 1.932},
    {526.5, 1.676},
    {527.5, 1.830},
    {528.5, 1.899},
    {529.5, 1.920},
    {530.5, 1.954},
    {531.5, 1.965},
    {532.5, 1.773},
    {533.5, 1.925},
    {534.5, 1.860},
    {535.5, 1.992},
    {536.5, 1.873},
    {537.5, 1.884},
    {538.5, 1.906},
    {539.5, 1.834},
    {540.5, 1.772},
    {541.5, 1.883},
    {542.5, 1.827},
    {543.5, 1.881},
    {544.5, 1.881},
    {545.5, 1.903},
    {546.5, 1.881},
    {547.5, 1.835},
    {548.5, 1.865},
    {549.5, 1.897},
    {550.5, 1.864},
    {551.5, 1.873},
    {552.5, 1.848},
    {553.5, 1.884},
    {554.5, 1.900},
    {555.5, 1.899},
    {556.5, 1.823},
    {557.5, 1.848},
    {558.5, 1.789},
    {559.5, 1.810},
    {560.5, 1.845},
    {561.5, 1.826},
    {562.5, 1.852},
    {563.5, 1.863},
    {564.5, 1.856},
    {565.5, 1.800},
    {566.5, 1.831},
    {567.5, 1.889},
    {568.5, 1.812},
    {569.5, 1.862},
    {570.5, 1.772},
    {571.5, 1.825},
    {572.5, 1.894},
    {573.5, 1.878},
    {574.5, 1.869},
    {575.5, 1.832},
    {576.5, 1.848},
    {577.5, 1.859},
    {578.5, 1.786},
    {579.5, 1.830},
    {580.5, 1.840},
    {581.5, 1.855},
    {582.5, 1.875},
    {583.5, 1.859},
    {584.5, 1.862},
    {585.5, 1.786},
    {586.5, 1.832},
    {587.5, 1.850},
    {588.5, 1.752},
    {589.5, 1.614},
    {590.5, 1.815},
    {591.5, 1.789},
    {592.5, 1.810},
    {593.5, 1.798},
    {594.5, 1.776},
    {595.5, 1.785},
    {596.5, 1.807},
    {597.5, 1.783},
    {598.5, 1.760},
    {599.5, 1.777},
    {600.5, 1.748},
    {601.5, 1.753},
    {602.5, 1.721},
    {603.5, 1.789},
    {604.5, 1.779},
    {605.5, 1.766},
    {606.5, 1.762},
    {607.5, 1.760},
    {608.5, 1.745},
    {609.5, 1.746},
    {610.5, 1.705},
    {611.5, 1.748},
    {612.5, 1.707},
    {613.5, 1.685},
    {614.5, 1.715},
    {615.5, 1.715},
    {616.5, 1.611},
    {617.5, 1.709},
    {618.5, 1.726},
    {619.5, 1.709},
    {620.5, 1.736},
    {621.5, 1.692},
    {622.5, 1.715},
    {623.5, 1.668},
    {624.5, 1.658},
    {625.5, 1.634},
    {626.5, 1.699},
    {627.5, 1.699},
    {628.5, 1.699},
    {629.5, 1.679},
    {631.0, 1.641},
    {633.0, 1.653},
    {635.0, 1.658},
    {637.0, 1.656},
    {639.0, 1.653},
    {641.0, 1.616},
    {643.0, 1.623},
    {645.0, 1.629},
    {647.0, 1.605},
    {649.0, 1.560},
    {651.0, 1.608},
    {653.0, 1.601},
    {655.0, 1.534},
    {657.0, 1.386},
    {659.0, 1.551},
    {661.0, 1.573},
    {663.0, 1.557},
    {665.0, 1.562},
    {667.0, 1.537},
    {669.0, 1.548},
    {671.0, 1.518},
    {673.0, 1.523},
    {675.0, 1.512},
    {677.0, 1.510},
    {679.0, 1.500},
    {681.0, 1.494},
    {683.0, 1.481},
    {685.0, 1.457},
    {687.0, 1.469},
    {689.0, 1.463},
    {691.0, 1.450},
    {693.0, 1.450},
    {695.0, 1.438},
    {697.0, 1.418},
    {699.0, 1.427},
    {701.0, 1.388},
    {703.0, 1.390},
    {705.0, 1.417},
    {707.0, 1.402},
    {709.0, 1.386},
    {711.0, 1.387},
    {713.0, 1.375},
    {715.0, 1.368},
    {717.0, 1.355},
    {719.0, 1.329},
    {721.0, 1.332},
    {723.0, 1.349},
    {725.0, 1.351},
    {727.0, 1.347},
    {729.0, 1.320},
    {731.0, 1.327},
    {733.0, 1.319},
    {735.0, 1.310},
    {737.0, 1.308},
    {739.0, 1.279},
    {741.0, 1.259},
    {743.0, 1.287},
    {745.0, 1.280},
    {747.0, 1.284},
    {749.0, 1.271},
    {751.0, 1.263},
    {753.0, 1.260},
    {755.0, 1.256},
    {757.0, 1.249},
    {759.0, 1.241},
    {761.0, 1.238},
    {763.0, 1.242},
    {765.0, 1.222},
    {767.0, 1.186},
    {769.0, 1.204},
    {771.0, 1.205},
    {773.0, 1.209},
    {775.0, 1.189},
    {777.0, 1.197},
    {779.0, 1.188},
    {781.0, 1.188},
    {783.0, 1.177},
    {785.0, 1.181},
    {787.0, 1.178},
    {789.0, 1.175},
    {791.0, 1.159},
    {793.0, 1.144},
    {795.0, 1.135},
    {797.0, 1.153},
    {799.0, 1.136},
    {801.0, 1.143},
    {803.0, 1.130},
    {805.0, 1.116},
    {807.0, 1.121},
    {809.0, 1.096},
    {811.0, 1.115},
    {813.0, 1.116},
    {815.0, 1.108},
    {817.0, 1.105},
    {819.0, 1.065},
    {821.0, 1.081},
    {823.0, 1.074},
    {825.0, 1.076},
    {827.0, 1.077},
    {829.0, 1.073},
    {831.0, 1.069},
    {833.0, 1.034},
    {835.0, 1.053},
    {837.0, 1.052},
    {839.0, 1.042},
    {841.0, 1.045},
    {843.0, 1.028},
    {845.0, 1.033},
    {847.0, 1.025},
    {849.0, 0.971},
    {851.0, 1.003},
    {853.0, 0.973},
    {855.0, 0.877},
    {857.0, 1.011},
    {859.0, 0.997},
    {861.0, 0.997},
    {863.0, 0.999},
    {865.0, 0.970},
    {867.0, 0.880},
    {869.0, 0.967},
    {871.0, 0.986},
    {873.0, 0.978},
    {875.0, 0.981},
    {877.0, 0.984},
    {879.0, 0.959},
    {881.0, 0.960},
    {883.0, 0.948},
    {885.0, 0.963},
    {887.0, 0.947},
    {889.0, 0.949},
    {891.0, 0.944},
    {893.0, 0.934},
    {895.0, 0.936},
    {897.0, 0.939},
    {899.0, 0.912},
    {901.0, 0.905},
    {903.0, 0.905},
    {905.0, 0.893},
    {907.0, 0.891},
    {909.0, 0.861},
    {911.0, 0.870},
    {913.0, 0.876},
    {915.0, 0.866},
    {917.0, 0.859},
    {919.0, 0.858},
    {921.0, 0.830},
    {923.0, 0.821},
    {925.0, 0.825},
    {927.0, 0.828},
    {929.0, 0.833},
    {931.0, 0.826},
    {933.0, 0.832},
    {935.0, 0.818},
    {937.0, 0.802},
    {939.0, 0.808},
    {941.0, 0.800},
    {943.0, 0.784},
    {945.0, 0.799},
    {947.0, 0.793},
    {949.0, 0.777},
    {951.0, 0.778},
    {953.0, 0.771},
    {955.0, 0.760},
    {957.0, 0.774},
    {959.0, 0.771},
    {961.0, 0.767},
    {963.0, 0.767},
    {965.0, 0.764},
    {967.0, 0.757},
    {969.0, 0.776},
    {971.0, 0.763},
    {973.0, 0.764},
    {975.0, 0.750},
    {977.0, 0.768},
    {979.0, 0.768},
    {981.0, 0.762},
    {983.0, 0.766},
    {985.0, 0.771},
    {987.0, 0.756},
    {989.0, 0.767},
    {991.0, 0.764},
    {993.0, 0.755},
    {995.0, 0.756},
    {997.0, 0.743},
    {999.0, 0.743},
    {1002.5, 0.745},
    {1007.5, 0.737},
    {1012.5, 0.734},
    {1017.5, 0.721},
    {1022.5, 0.704},
    {1027.5, 0.708},
    {1032.5, 0.688},
    {1037.5, 0.692},
    {1042.5, 0.681},
    {1047.5, 0.685},
    {1052.5, 0.661},
    {1057.5, 0.650},
    {1062.5, 0.642},
    {1067.5, 0.643},
    {1072.5, 0.638},
    {1077.5, 0.630},
    {1082.5, 0.620},
    {1087.5, 0.614},
    {1092.5, 0.612},
    {1097.5, 0.599},
    {1102.5, 0.608},
    {1107.5, 0.601},
    {1112.5, 0.603},
    {1117.5, 0.589},
    {1122.5, 0.579},
    {1127.5, 0.569},
    {1132.5, 0.566},
    {1137.5, 0.563},
    {1142.5, 0.557},
    {1147.5, 0.556},
    {1152.5, 0.545},
    {1157.5, 0.554},
    {1162.5, 0.540},
    {1167.5, 0.530},
    {1172.5, 0.533},
    {1177.5, 0.525},
    {1182.5, 0.514},
    {1187.5, 0.512},
    {1192.5, 0.511},
    {1197.5, 0.502},
    {1202.5, 0.496},
    {1207.5, 0.494},
    {1212.5, 0.489},
    {1217.5, 0.500},
    {1222.5, 0.481},
    {1227.5, 0.481},
    {1232.5, 0.484},
    {1237.5, 0.477},
    {1242.5, 0.477},
    {1247.5, 0.466},
    {1252.5, 0.474},
    {1257.5, 0.463},
    {1262.5, 0.444},
    {1267.5, 0.438},
    {1272.5, 0.439},
    {1277.5, 0.453},
    {1282.5, 0.435},
    {1287.5, 0.437},
    {1292.5, 0.442},
    {1297.5, 0.438},
    {1302.5, 0.438},
    {1307.5, 0.429},
    {1312.5, 0.419},
    {1317.5, 0.416},
    {1322.5, 0.416},
    {1327.5, 0.411},
    {1332.5, 0.405},
    {1337.5, 0.400},
    {1342.5, 0.398},
    {1347.5, 0.394},
    {1352.5, 0.387},
    {1357.5, 0.382},
    {1362.5, 0.378},
    {1367.5, 0.370},
    {1372.5, 0.369},
    {1377.5, 0.368},
    {1382.5, 0.364},
    {1387.5, 0.364},
    {1392.5, 0.358},
    {1397.5, 0.357},
    {1402.5, 0.353},
    {1407.5, 0.350},
    {1412.5, 0.346},
    {1417.5, 0.344},
    {1422.5, 0.343},
    {1427.5, 0.348},
    {1432.5, 0.337},
    {1437.5, 0.331},
    {1442.5, 0.327},
    {1447.5, 0.318},
    {1452.5, 0.323},
    {1457.5, 0.307},
    {1462.5, 0.317},
    {1467.5, 0.311},
    {1472.5, 0.311},
    {1477.5, 0.307},
    {1482.5, 0.303},
    {1487.5, 0.298},
    {1492.5, 0.303},
    {1497.5, 0.300},
    {1502.5, 0.296},
    {1507.5, 0.295},
    {1512.5, 0.290},
    {1517.5, 0.290},
    {1522.5, 0.286},
    {1527.5, 0.290},
    {1532.5, 0.282},
    {1537.5, 0.274},
    {1542.5, 0.275},
    {1547.5, 0.274},
    {1552.5, 0.273},
    {1557.5, 0.272},
    {1562.5, 0.269},
    {1567.5, 0.263},
    {1572.5, 0.260},
    {1577.5, 0.259},
    {1582.5, 0.255},
    {1587.5, 0.252},
    {1592.5, 0.246},
    {1597.5, 0.246},
    {1602.5, 0.247},
    {1607.5, 0.242},
    {1612.5, 0.244},
    {1617.5, 0.243},
    {1622.5, 0.240},
    {1627.5, 0.244},
    {1632.5, 0.241},
    {1637.5, 0.237},
    {1642.5, 0.234},
    {1647.5, 0.235},
    {1652.5, 0.234},
    {1657.5, 0.234},
    {1662.5, 0.233},
    {1667.5, 0.229},
    {1672.5, 0.228},
    {1677.5, 0.220},
    {1682.5, 0.221},
    {1687.5, 0.219},
    {1692.5, 0.219},
    {1697.5, 0.214},
    {1702.5, 0.217},
    {1707.5, 0.212},
    {1712.5, 0.203},
    {1717.5, 0.212},
    {1722.5, 0.205},
    {1727.5, 0.196},
    {1732.5, 0.190},
    {1737.5, 0.189},
    {1742.5, 0.191},
    {1747.5, 0.185},
    {1752.5, 0.187},
    {1757.5, 0.189},
    {1762.5, 0.184},
    {1767.5, 0.182},
    {1772.5, 0.177},
    {1777.5, 0.173},
    {1782.5, 0.171},
    {1787.5, 0.170},
    {1792.5, 0.169},
    {1797.5, 0.173},
    {1802.5, 0.169},
    {1807.5, 0.168},
    {1812.5, 0.160},
    {1817.5, 0.160},
    {1822.5, 0.159},
    {1827.5, 0.156},
    {1832.5, 0.156},
    {1837.5, 0.150},
    {1842.5, 0.153},
    {1847.5, 0.151},
    {1852.5, 0.148},
    {1857.5, 0.145},
    {1862.5, 0.143},
    {1867.5, 0.143},
    {1872.5, 0.135},
    {1877.5, 0.135},
    {1882.5, 0.140},
    {1887.5, 0.138},
    {1892.5, 0.137},
    {1897.5, 0.138},
    {1902.5, 0.133},
    {1907.5, 0.136},
    {1912.5, 0.138},
    {1917.5, 0.136},
    {1922.5, 0.134},
    {1927.5, 0.132},
    {1932.5, 0.132},
    {1937.5, 0.131},
    {1942.5, 0.129},
    {1947.5, 0.127},
    {1952.5, 0.126},
    {1957.5, 0.122},
    {1962.5, 0.126},
    {1967.5, 0.125},
    {1972.5, 0.125},
    {1977.5, 0.129},
    {1982.5, 0.125},
    {1987.5, 0.123},
    {1992.5, 0.121},
    {1997.5, 0.123},
    {2002.5, 0.116},
    {2012.5, 0.114},
    {2022.5, 0.113},
    {2032.5, 0.110},
    {2042.5, 0.107},
    {2052.5, 0.104},
    {2062.5, 0.100},
    {2077.5, 0.101},
    {2092.5, 0.098},
    {2107.5, 0.093},
    {2122.5, 0.087},
    {2137.5, 0.085},
    {2152.5, 0.081},
    {2167.5, 0.080},
    {2182.5, 0.075},
    {2197.5, 0.073},
    {2212.5, 0.075},
    {2227.5, 0.075},
    {2247.5, 0.072},
    {2262.5, 0.071},
    {2282.5, 0.069},
    {2302.5, 0.066},
    {2322.5, 0.053},
    {2342.5, 0.058},
    {2362.5, 0.065},
    {2382.5, 0.055},
    {2402.5, 0.054},
    {2422.5, 0.057},
    {2442.5, 0.051},
    {2467.5, 0.053},
    {2492.5, 0.054},
    {2517.5, 0.047},
    {2542.5, 0.046},
    {2567.5, 0.044},
    {2592.5, 0.042},
    {2617.5, 0.041},
    {2642.5, 0.039},
    {2672.5, 0.038},
    {2702.5, 0.036},
    {2732.5, 0.035},
    {2762.5, 0.034},
    {2797.5, 0.032},
    {2832.5, 0.031},
    {2867.5, 0.029},
    {2907.5, 0.028},
    {2947.5, 0.026},
    {2987.5, 0.025},
    {3025.0, 0.024},
    {3075.0, 0.023},
    {3125.0, 0.021},
    {3175.0, 0.020},
    {3235.0, 0.019},
    {3295.0, 0.018},
    {3355.0, 0.016},
    {3425.0, 0.015},
    {3495.0, 0.014},
    {3575.0, 0.013},
    {3665.0, 0.012},
    {3755.0, 0.011},
    {3855.0, 0.010},
    {3965.0, 0.009},
    {4085.0, 0.008},
    {4225.0, 0.007},
    {4385.0, 0.006},
    {4575.0, 0.005},
    {4805.0, 0.004},
    {5085.0, 0.003},
    {5445.0, 0.002},
    {5925.0, 0.002},
    {6615.0, 0.001},
    {7785.0, 0.001},
    {10075.0, 0.000},
};

/**
 * Convert a pair of angles (elevation and azimuth) to a normalized cartesian
 * vector. The spherical_to_cartesian function in common.hxx is not used because
 * light sources use a different coordinate system. 90 degrees of elevation
 * correspond to the zenith.
 */
vec3
light_spherical_to_cartesian(float alpha, float phi)
{
    float cos_alpha = std::cos(alpha);
    return vec3(std::cos(phi) * cos_alpha,
                std::sin(phi) * cos_alpha,
                std::sin(alpha));
}

/**
 * Compute the matrix that transforms an up vector to the light direction.
 */
mat3
compute_light_to_world_matrix(const vec3 &light_direction)
{
    if (light_direction == WORLD_UP) {
        // North pole
        return glm::mat3(1.0f);
    } else if (light_direction == -WORLD_UP) {
        // South pole
        return glm::mat3(-1.0f);
    }
    vec3 u = normalize(cross(WORLD_UP, light_direction));
    float alpha = std::acos(dot(light_direction, WORLD_UP));
    return mat3(rotate(mat4(1.0f), alpha, u));
}

/**
 * Return an uniformly distributed vector on a spherical cap of the unit sphere
 * with angle theta, given two uniform random variables.
 */
vec3
sample_uniform_spherical_cap(const vec2 &s, float cos_theta)
{
    float z = s.x * (1.0f - cos_theta) + cos_theta;
    float r = sqrtf(fmaxf(0.0f, 1.0f - z*z));
    float phi = M_TWO_PI * s.y;
    return vec3(r * cosf(phi), r * sinf(phi), z);
}

} // anonymous namespace

//------------------------------------------------------------------------------

LightSource::LightSource(float elevation, float azimuth)
{
    direction = light_spherical_to_cartesian(radians(elevation),
                                             radians(azimuth));
    light_to_world = compute_light_to_world_matrix(direction);
}

//------------------------------------------------------------------------------

DirectionalLight::DirectionalLight(float elevation, float azimuth) :
    LightSource(elevation, azimuth)
{
}

float
DirectionalLight::sample(const vec2 &sample, vec3 &wi, float wl) const
{
    wi = light_to_world * WORLD_UP;
    return eval(wl);
}


//------------------------------------------------------------------------------

DistantDisk::DistantDisk(float elevation, float azimuth) :
    LightSource(elevation, azimuth)
{
}

float
DistantDisk::sample(const vec2 &sample, vec3 &wi, float wl) const
{
    wi = sample_uniform_spherical_cap(sample, SUN_COS_THETA);
    wi = light_to_world * wi;
    return eval(wl);
}

//------------------------------------------------------------------------------

Sun::Sun(float elevation, float azimuth) :
    DirectionalLight(elevation, azimuth)
{
}

float
Sun::eval(float wl) const
{
    // W * m^-2 * nm^-1
    float sun_spectral_irradiance = lut_lerp(sun_spectral_irradiance_lut, wl);
    return sun_spectral_irradiance;
}
